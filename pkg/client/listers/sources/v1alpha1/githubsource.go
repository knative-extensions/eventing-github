/*
Copyright 2020 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "knative.dev/eventing-github/pkg/apis/sources/v1alpha1"
)

// GitHubSourceLister helps list GitHubSources.
// All objects returned here must be treated as read-only.
type GitHubSourceLister interface {
	// List lists all GitHubSources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GitHubSource, err error)
	// GitHubSources returns an object that can list and get GitHubSources.
	GitHubSources(namespace string) GitHubSourceNamespaceLister
	GitHubSourceListerExpansion
}

// gitHubSourceLister implements the GitHubSourceLister interface.
type gitHubSourceLister struct {
	listers.ResourceIndexer[*v1alpha1.GitHubSource]
}

// NewGitHubSourceLister returns a new GitHubSourceLister.
func NewGitHubSourceLister(indexer cache.Indexer) GitHubSourceLister {
	return &gitHubSourceLister{listers.New[*v1alpha1.GitHubSource](indexer, v1alpha1.Resource("githubsource"))}
}

// GitHubSources returns an object that can list and get GitHubSources.
func (s *gitHubSourceLister) GitHubSources(namespace string) GitHubSourceNamespaceLister {
	return gitHubSourceNamespaceLister{listers.NewNamespaced[*v1alpha1.GitHubSource](s.ResourceIndexer, namespace)}
}

// GitHubSourceNamespaceLister helps list and get GitHubSources.
// All objects returned here must be treated as read-only.
type GitHubSourceNamespaceLister interface {
	// List lists all GitHubSources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GitHubSource, err error)
	// Get retrieves the GitHubSource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GitHubSource, error)
	GitHubSourceNamespaceListerExpansion
}

// gitHubSourceNamespaceLister implements the GitHubSourceNamespaceLister
// interface.
type gitHubSourceNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.GitHubSource]
}
